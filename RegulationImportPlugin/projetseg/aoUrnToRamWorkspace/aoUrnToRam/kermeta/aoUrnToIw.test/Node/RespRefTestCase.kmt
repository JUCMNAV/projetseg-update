package aoUrnToRam::test;
require "platform:/lookup/aoUrnToRam/kermeta/aoUrnToIw.test/TestHelper.kmt"

using kermeta::standard
using kermeta::kunit
using jucm_OneFileWorkaround::urn
using jucm_OneFileWorkaround::ucm::map
using jucm_OneFileWorkaround::urncore
using intermediateWorkflow

class AoUrnToIw_RespRefTestCase inherits TestCase,AoUrnToIw_TestHelper {
	reference sut:RespRef
	
	method setUp() is do
		sut:=createRespRef
	end

	@feature "FeaTransformStartPointResponsibilityEndPoint"
	operation testBuild_ShouldSetIwCustomizableNodeNameToResponsibilityName() is do	
		sut.build
		
		assertNotVoid(sut.iwCustomizableNode)
		assertEquals(sut.respDef.name,sut.iwCustomizableNode.name)
	end

	
	@feature "FeaHandleUntaggedResponsibilityInActor"
	operation testBuild_NoComponent_ShouldBuildIwCustomizableNode() is do	
		sut.build
		
		assertNotVoid(sut.iwCustomizableNode)
	end
	
	@feature "FeaHandleUntaggedResponsibilityInActor"
	operation testBuild_NotInActorComponent_ShouldBuildIwCustomizableNode() is do
		attachComponentRef(sut,ComponentKind.Object)	
		sut.build
		
		assertNotVoid(sut.iwCustomizableNode)
	end
	
	@feature "FeaHandleUntaggedResponsibilityInActor"
	operation testBuild_NestedComponentsWithoutActor_ShouldBuildIwCustomizableNode() is do
		var rootComponent:Component init createComponent_ComponentKind(ComponentKind.Object)
		attachComponentRef(sut,ComponentKind.Object)
		sut.contRef.contDef.asType(Component).includingComponent:=rootComponent
			
		sut.build
		
		assertNotVoid(sut.iwCustomizableNode)
	end
	
	@feature "FeaHandleUntaggedResponsibilityInActor"
	operation testBuild_InActorComponent_ShouldNotBuildIwCustomizableNode() is do	
		attachComponentRef(sut,ComponentKind.Actor)	
		sut.build
		
		assertVoid(sut.iwCustomizableNode)
	end
	
	@feature "FeaHandleUntaggedResponsibilityInActor"
	operation testBuild_NestedComponentsWithActor_ShouldNotBuildIwCustomizableNode() is do	
		var rootComponent:Component init createComponent_ComponentKind(ComponentKind.Object)
		var middleComponent:Component init createComponent_ComponentKind(ComponentKind.Actor)
		middleComponent.includingComponent:=rootComponent
		attachComponentRef(sut,ComponentKind.Object)
		sut.contRef.contDef.asType(Component).includingComponent:=middleComponent
			
		sut.build
		
		assertVoid(sut.iwCustomizableNode)
	end
	
	@feature "FeaTransformResponsibilityDefinition"
	operation testBuild_SharedRespDef_ShouldSetCustomizableNodeRefId() is do
		var toSameRespDef:RespRef init createRespRef()
		toSameRespDef.respDef:=sut.respDef

		sut.build
		
		assertEquals(true,sut.iwCustomizableNode.isShared)
		assertEquals("1",sut.iwCustomizableNode.customizableNodeRefId)
	end
	
	@feature "FeaTransformResponsibilityDefinition"
	operation testBuild_NotSharedRespDef_ShouldNotSetCustomizableNodeRefId() is do
		sut.build
		
		assertEquals(false,sut.iwCustomizableNode.isShared)
		assertVoid(sut.iwCustomizableNode.customizableNodeRefId)
	end
}