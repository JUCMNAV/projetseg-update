<?xml version="1.0" encoding="UTF-8"?>
<project name="seg.jUCMNav" default="build.jars" basedir=".">

	<property name="bootclasspath" value=""/>
	<property name="ws" value="win32"/> <!-- JP: hard-code win32 because property not defined outside eclipse -->
	<property name="basews" value="${ws}"/>
	<property name="baseos" value="${os}"/>
	<property name="basearch" value="${arch}"/>
	<property name="basenl" value="${nl}"/>
	<property name="javacFailOnError" value="true"/>
	<property name="javacDebugInfo" value="on"/>
	<property name="javacVerbose" value="false"/>
	<property name="javacSource" value="1.4"/>
	<property name="javacTarget" value="1.4"/>
	<property name="compilerArg" value=""/>
	<property environment="env" />
	<property name="env.ECLIPSE_HOME" value="c:/eclipse/" /> <!-- JP: supplies a default value but does not overwrite the real one. Set a value for ECLIPSE_HOME to override C:/eclipse -->
	<property name="eclipsehome" value="${env.ECLIPSE_HOME}" />

	<target name="testenv">
		<echo>${eclipsehome}</echo>
	</target>

	<target name="init" depends="properties">
		<condition property="pluginTemp" value="${buildTempFolder}/eclipse/plugins">
			<isset property="buildTempFolder"/>
		</condition>
		<property name="pluginTemp" value="${basedir}"/>
		<condition property="build.result.folder" value="${pluginTemp}/seg.jUCMNav">
			<isset property="buildTempFolder"/>
		</condition>
		<property name="build.result.folder" value="${basedir}/build/"/>
		<property name="temp.folder" value="${basedir}/temp.folder"/>
		<property name="plugin.destination" value="${basedir}/build/"/>
		<echo>Using ECLIPSE_HOME: ${eclipsehome}</echo>
	</target>

	<target name="clean.buildjar" depends="init, clean">
		<antcall target="build.jars"/>
	</target>

	<target name="build.fullzip" depends="init, clean">
		<antcall target="clean"/>
		<antcall target="zip.plugin"/>
		<antcall target="runtests"/>
	</target>
	
	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
	</target>

	<target name="build.update.jar" depends="init" description="Build the plug-in: seg.jUCMNav for an update site.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<zip zipfile="${plugin.destination}/seg.jUCMNav_1.0.0.jar" basedir="${temp.folder}/seg.jUCMNav_1.0.0" filesonly="false" whenempty="skip" update="false"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="jUCMNav.jar" depends="init" unless="jUCMNav.jar" description="Create jar: jUCMNav.jar.">
		<delete dir="${temp.folder}/jUCMNav.jar.bin"/>
		<mkdir dir="${temp.folder}/jUCMNav.jar.bin"/>
		<!-- compile the source code -->
		<javac destdir="${temp.folder}/jUCMNav.jar.bin" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no" bootclasspath="${bootclasspath}" source="${javacSource}" target="${javacTarget}"		>
			<compilerarg line="${compilerArg}"/>
			<classpath>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui_3.0.1/ui.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.core.runtime_3.0.1/runtime.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.osgi_3.0.1/core.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.osgi_3.0.1/console.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.osgi_3.0.1/osgi.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.osgi_3.0.1/resolver.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.osgi_3.0.1/defaultAdaptor.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.osgi_3.0.1/eclipseAdaptor.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.help_3.0.0/help.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.swt_3.0.1/ws/${basews}/swt.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.swt.win32_3.0.1/ws/${basews}/swt.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.swt.win32_3.0.1"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.jface_3.0.0/jface.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.workbench_3.0.1/compatibility.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.workbench_3.0.1/workbench.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.workbench.compatibility_3.0.0/compatibility.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.workbench.compatibility_3.0.0/workbench.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.core.expressions_3.0.0/expressions.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.core.resources_3.0.1/resources.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.core.resources.win32_3.0.0/resources.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.core.resources.win32_3.0.0/resources-win32.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.core.runtime.compatibility_3.0.0/compatibility.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.update.configurator_3.0.0/configurator.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.ide_3.0.1/ide.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.win32_3.0.1/ide.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.win32_3.0.1/workbenchwin32.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.views_3.0.0/views.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.update.core_3.0.1/updatecore.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.update.core.win32_3.0.0/updatecore.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.update.ui_3.0.1/updateui.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.help.base_3.0.1/helpbase.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.apache.lucene_1.3.1/parser.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.apache.lucene_1.3.1/lucene-1.3-final.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.help.appserver_3.0.0/appserver.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.forms_3.0.0/forms.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.emf.ecore_2.0.1/runtime/ecore.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.emf.common_2.0.1/runtime/common.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.draw2d_3.0.1/draw2d.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.gef_3.0.1/gef.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.emf.ecore.xmi_2.0.1/runtime/ecore.xmi.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.junit_3.8.1/junit.jar"/>
			</classpath>
			<src path="src/"			/>
			</javac>
		<!-- Copy necessary resources -->
		<copy todir="${temp.folder}/jUCMNav.jar.bin" failonerror="true">
			<fileset dir="src/" excludes="**/*.java, **/package.htm*"			/>
		</copy>
		<mkdir dir="${build.result.folder}"/>
		<jar jarfile="${build.result.folder}/jUCMNav.jar" basedir="${temp.folder}/jUCMNav.jar.bin"/>
		<delete dir="${temp.folder}/jUCMNav.jar.bin"/>
	</target>

	<target name="jUCMNavsrc.zip" depends="init" unless="jUCMNavsrc.zip">
		<mkdir dir="${build.result.folder}"/>
		<zip zipfile="${build.result.folder}/jUCMNavsrc.zip" filesonly="false" whenempty="skip" update="false">
			<fileset dir="src/" includes="**/*.java"			/>
		</zip>
	</target>

	<target name="build.jars" depends="init" description="Build all the jars for the plug-in: seg.jUCMNav.">
		<available property="jUCMNav.jar" file="${build.result.folder}/jUCMNav.jar"/>
		<antcall target="jUCMNav.jar"/>
	</target>

	<target name="build.sources" depends="init">
		<available property="jUCMNavsrc.zip" file="${build.result.folder}/jUCMNavsrc.zip"/>
		<antcall target="jUCMNavsrc.zip"/>
	</target>

	<target name="build.docs" depends="init">
		<javadoc packagenames="seg.jUCMNav.*"
		           sourcepath="src"
		           excludepackagenames="seg.jUCMNav.Tests.*"
		           defaultexcludes="yes"
		           destdir="docs/api"
		           author="true"
		           version="true"
			   use="true"
			   additionalparam="-quiet -source 1.4"
		           windowtitle="jUCMNav">
			   <tag name="todo" scope="all" description="To do:" />
			<classpath>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui_3.0.1/ui.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.core.runtime_3.0.1/runtime.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.osgi_3.0.1/core.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.osgi_3.0.1/console.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.osgi_3.0.1/osgi.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.osgi_3.0.1/resolver.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.osgi_3.0.1/defaultAdaptor.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.osgi_3.0.1/eclipseAdaptor.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.help_3.0.0/help.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.swt_3.0.1/ws/${basews}/swt.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.swt.win32_3.0.1/ws/${basews}/swt.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.swt.win32_3.0.1"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.jface_3.0.0/jface.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.workbench_3.0.1/compatibility.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.workbench_3.0.1/workbench.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.workbench.compatibility_3.0.0/compatibility.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.workbench.compatibility_3.0.0/workbench.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.core.expressions_3.0.0/expressions.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.core.resources_3.0.1/resources.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.core.resources.win32_3.0.0/resources.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.core.resources.win32_3.0.0/resources-win32.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.core.runtime.compatibility_3.0.0/compatibility.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.update.configurator_3.0.0/configurator.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.ide_3.0.1/ide.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.win32_3.0.1/ide.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.win32_3.0.1/workbenchwin32.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.views_3.0.0/views.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.update.core_3.0.1/updatecore.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.update.core.win32_3.0.0/updatecore.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.update.ui_3.0.1/updateui.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.help.base_3.0.1/helpbase.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.apache.lucene_1.3.1/parser.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.apache.lucene_1.3.1/lucene-1.3-final.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.help.appserver_3.0.0/appserver.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.ui.forms_3.0.0/forms.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.emf.ecore_2.0.1/runtime/ecore.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.emf.common_2.0.1/runtime/common.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.draw2d_3.0.1/draw2d.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.gef_3.0.1/gef.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.eclipse.emf.ecore.xmi_2.0.1/runtime/ecore.xmi.jar"/>
				<pathelement path="${eclipsehome}/plugins/org.junit_3.8.1/junit.jar"/>
		</classpath>
	</javadoc>
		<available property="jUCMNavsrc.zip" file="${build.result.folder}/jUCMNavsrc.zip"/>
		<antcall target="jUCMNavdocs.zip"/>
	</target>

	<target name="jUCMNavdocs.zip" depends="init">
		<mkdir dir="${build.result.folder}"/>
		<zip zipfile="${build.result.folder}/jUCMNavdocs.zip" filesonly="false" whenempty="skip" update="false">
			<fileset dir="" includes="docs/**"/>
		</zip>
	</target>
	
	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/seg.jUCMNav_1.0.0"/>
		<copy todir="${destination.temp.folder}/seg.jUCMNav_1.0.0" failonerror="true">
			<fileset dir="${build.result.folder}" includes="jUCMNav.jar"			/>
		</copy>
		<copy todir="${destination.temp.folder}/seg.jUCMNav_1.0.0" failonerror="true">
			<fileset dir="${basedir}" includes="plugin.xml,jUCMNav.jar"			/>
		</copy>
	</target>

	<target name="build.zips" depends="init">
	</target>

	<target name="gather.sources" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/seg.jUCMNav_1.0.0"/>
		<copy file="${build.result.folder}/jUCMNavsrc.zip" todir="${destination.temp.folder}/seg.jUCMNav_1.0.0" failonerror="false"/>
	</target>

	<target name="gather.docs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/seg.jUCMNav_1.0.0"/>
		<copy file="${build.result.folder}/jUCMNavdocs.zip" todir="${destination.temp.folder}/seg.jUCMNav_1.0.0" failonerror="false"/>
	</target>
	
	<target name="gather.logs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/seg.jUCMNav_1.0.0"/>
		<copy file="${temp.folder}/jUCMNav.jar.bin.log" todir="${destination.temp.folder}/seg.jUCMNav_1.0.0" failonerror="false"/>
	</target>

	<target name="clean" depends="init" description="Clean the plug-in: seg.jUCMNav of all the zips, jars and logs created.">
		<delete file="testresults.xml"/>
		<delete file="${build.result.folder}/jUCMNav.jar"/>
		<delete file="${build.result.folder}/jUCMNavsrc.zip"/>
		<delete file="${build.result.folder}/jUCMNavdocs.zip"/>
		<delete file="${plugin.destination}/seg.jUCMNav_1.0.0.jar"/>
		<delete file="${plugin.destination}/seg.jUCMNav_1.0.0.zip"/>
		<delete dir="${temp.folder}"/>
		<delete dir="docs/api"/>
	</target>

	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
		<eclipse.convertPath fileSystemPath="H:/eclipse/workspace/seg.jUCMNav" property="resourcePath"/>
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
	</target>

	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: seg.jUCMNav.">
		<delete dir="${temp.folder}/eclipse/plugins"/>
		<mkdir dir="${temp.folder}/eclipse/plugins"/>
		<antcall target="build.jars"/>
		<antcall target="build.sources"/>
		<antcall target="build.docs"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/eclipse/plugins/"/>
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/eclipse/plugins/"/>
		</antcall>
		<antcall target="gather.docs">
			<param name="destination.temp.folder" value="${temp.folder}/eclipse/plugins/"/>
		</antcall>
		<delete>
			<fileset dir="${temp.folder}" includes="**/*.bin.log"			/>
		</delete>
		<!-- Include test.xml in the zip for unit testing purposes -->
		<copy file="test.xml" todir="${temp.folder}/eclipse/plugins/seg.jUCMNav_1.0.0" />
		<zip zipfile="${plugin.destination}/seg.jUCMNav_1.0.0.zip" basedir="${temp.folder}" filesonly="true" whenempty="skip" update="false"/>
		<delete dir="${temp.folder}"/>
	</target>
	
	<!-- not from here
	<target name="runtests" depends="init, build.jars" description="Run unit tests on jUCMNav.jar">
		<junit printsummary="yes">
			<classpath>
				<pathelement location="${build.result.folder}jUCMNav.jar" />
				<fileset dir="${eclipsehome}/plugins">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<test name="seg.jUCMNav.tests.TestAllTestSuite" outfile="testresults"/>
			<formatter type="xml" />
		</junit>
	</target>
	-->
	
</project>
