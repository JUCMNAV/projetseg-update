package intermediateWorkflow;

require kermeta
require "platform:/resource/aoUrnToRam/metamodel/intermediateWorkflow.ecore"

using kermeta::standard
using kermeta::utils

aspect class IwModel {
	operation handleInputProcessingNodes() is do
		concerns.each{concern|
			concern.workflows.each{workflow|
				workflow.nodes.each{node|node.handleInputProcessingNodes}
			}
		}
	end
}

aspect class IwNode {
	//virtual
	operation handleInputProcessingNodes() is do
		//default: do nothing
	end
}

aspect class IwInput {
	reference iwInputProcessingNode:IwCustomizableNode

	method handleInputProcessingNodes() is do
		var target:IwNode init succs.one.target
		if(target.isInstanceOf(IwEndPoint) or 
		   target.isInstanceOf(IwInput) or
		   target.isInstanceOf(IwOrFork) 
		) then
			iwInputProcessingNode:=IwCustomizableNode.new
			iwInputProcessingNode.name:="Process"+name
			iwInputProcessingNode.workflow:=workflow

			succs.clear //clear existing link
			connectNodes(self,iwInputProcessingNode)
			connectNodes(iwInputProcessingNode,target)						
		end
	end

	//stle: reuse
	operation connectNodes(source:IwNode,target:IwNode) is do
		var connection:IwNodeConnection init IwNodeConnection.new
		connection.source:=source
		connection.target:=target
	end
}



