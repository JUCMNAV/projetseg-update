package javaInstantiator;

require "platform:/resource/aoUrnToRam/src/iwToJavaInstantiator/JavaInstantiator/TextView.kmt"

using kermeta::standard
using kermeta::utils
using aoUrnToRam

class JavaView inherits TextView{
	operation appendPackage(name:String) is do
		append("package ")
		append(name)
		append(";\n\n")
	end
	
	operation appendImport(name:String) is do
		append("import ")
		append(name)
		append(";\n")
	end

	operation appendMember(type:String,name:String,initialization:String) is do
		appendIndent(1,"private ")
		append(type)
		append(" ")
		append(name)
		append("=")
		append(initialization)
		append(";\n")
	end

	operation appendLocalVarDefaultConstructor(type:String,name:String) is do
		appendIndent(2,type)
		append(" ")
		append(name)
		append("=new ")
		append(type)
		append("();\n")
	end

//*********************************************************
//Method Declaration
//*********************************************************/
	operation appendMethod_Pre(methodHeader:String) is do
		appendNextLine
		appendIndent(1,methodHeader)	
	end

	operation appendMethod_Post() is do
		appendIndent(1,"}\n")	
	end

//*********************************************************
//MethodInvocation
//*********************************************************/
	operation appendMethodInvocation_0Param(methodName:String) is do
		appendIndent(2,methodName)
		append("();\n")
	end

//*********************************************************
//MethodInvocationOn
//*********************************************************/
	operation appendMethodInvocationOn_0Param(methodOwner:String,methodName:String,param1:String) is do
		var params:Sequence<String> init Sequence<String>.new
		appendMethodInvocationOn_NParams(methodOwner,methodName,params)
	end

	operation appendMethodInvocationOn_1Param(methodOwner:String,methodName:String,param1:String) is do
		var params:Sequence<String> init Sequence<String>.new
		params.add(param1) 
		appendMethodInvocationOn_NParams(methodOwner,methodName,params)
	end
	
	operation appendMethodInvocationOn_2Params(methodOwner:String,methodName:String,param1:String,param2:String) is do
		var params:Sequence<String> init Sequence<String>.new
		params.add(param1) 
		params.add(param2)
		appendMethodInvocationOn_NParams(methodOwner,methodName,params)
	end
	
	operation appendMethodInvocationOn_3Params(methodOwner:String,methodName:String,param1:String,param2:String,param3:String) is do
		var params:Sequence<String> init Sequence<String>.new
		params.add(param1) 
		params.add(param2)
		params.add(param3)
		appendMethodInvocationOn_NParams(methodOwner,methodName,params)
	end

	operation appendMethodInvocationOn_4Params(methodOwner:String,methodName:String,param1:String,param2:String,param3:String,param4:String) is do
		var params:Sequence<String> init Sequence<String>.new
		params.add(param1) 
		params.add(param2)
		params.add(param3)
		params.add(param4)
		appendMethodInvocationOn_NParams(methodOwner,methodName,params)
	end
	
	operation appendMethodInvocationOn_NParams(methodOwner:String,methodName:String,params:Sequence<String>) is do
		appendIndent(2,methodOwner)
		append(".")
		append(methodName)
		append("(")
		appendWithDelimiter(params,",",function{param:String|param}) 
		append(");\n")
	end
}