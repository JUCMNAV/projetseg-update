package intermediateWorkflow;

require "platform:/resource/aoUrnToRam/src/iwToJavaInstantiator/_Ref.kmt"

using kermeta::standard
using javaInstantiator

aspect class IwNode {
	operation jiAppendBuildStatement(workflowInstantiator:WorkflowInstantiator) is do
		//stle: temp do nothing
		//throw exception in this case because abstract in aspect produces meaningless excpetion msg
	end
	
	operation jiAppendWorkflowNodeMember(workflowInstantiator:WorkflowInstantiator,workflowNodeType:String) is do
		var initialization:String init "new "+workflowNodeType+"()"
		workflowInstantiator.appendMember(workflowNodeType,jiInstanceName,initialization)
	end
	
	operation jiAppendCustomizableNodeMember(workflowInstantiator:WorkflowInstantiator) is do
		workflowInstantiator.appendMember(
			"CustomizableNode",
			jiInstanceName,
			jiGetCustomizableNodeMemberInitialization(workflowInstantiator)
		)
	end
	
	operation jiGetCustomizableNodeMemberInitialization(workflowInstantiator:WorkflowInstantiator):String is do
		var customizableNodeFullyQualifiedName:String 
		init workflowInstantiator.customizableClassSubPackage+"."+step.name+"."+name
		
		result:="createCustomizableNode(\""+customizableNodeFullyQualifiedName+"\")"
	end
	
	operation jiAppendLinkStatement(workflowInstantiator:WorkflowInstantiator) is do
		succs.each{succ|succ.jiAppendLinkStatement(workflowInstantiator)}
	end
	
	property readonly jiInstanceName:String 
	getter is do
		result:="_"+name
	end
}
