package oneurn::ucm::map;
require "platform:/resource/aoUrnToRam/src/aoUrnToIw/_Ref.kmt"

using kermeta::standard
using intermediateWorkflow

aspect class NodeConnection{
	reference iwNodeConnection: IwNodeConnection
	
	operation build() is do
		iwNodeConnection:=IwNodeConnection.new
		iwNodeConnection.conditionName:=conditionLabel
	end
	
	operation link() is do
		iwNodeConnection.source:=source.asType(PathNode).iwExitNode
		iwNodeConnection.target:=iwSingleTarget
	end
	
	//stle: believe it is not required anymore
	property readonly iwSingleTarget : IwNode
	getter is do
		if(target.asType(PathNode).iwNodes_ReadOnly.isEmpty==false) then
			result:=target.asType(PathNode).iwEntryNode
		else
		    //target has no iwNodes implies target has always has a single succ
			//stle: single again
			result:=target.succ.one.asType(NodeConnection).iwSingleTarget
		end
	end
	
	//stle: test later
	property readonly iwSinglePredNodeConnection : IwNodeConnection
	getter is do
		if(iwNodeConnection.isVoid==false) then
			result:=iwNodeConnection
		else
		    //source has no iwNodeConnection implies a single IwNodeConnection exists before
			//stle: single again
			result:=source.pred.one.asType(NodeConnection).iwSinglePredNodeConnection
		end
	end
	
	property readonly conditionLabel: String
	getter is do
		if(condition.isVoid==false) then
			result:=condition.label
		else
			result:=void
		end
	end
	
	property readonly targetAsPathNode: PathNode
	getter is do
		result:=target.asType(PathNode)
	end

	property readonly sourceAsPathNode: PathNode
	getter is do
		result:=source.asType(PathNode)
	end

}