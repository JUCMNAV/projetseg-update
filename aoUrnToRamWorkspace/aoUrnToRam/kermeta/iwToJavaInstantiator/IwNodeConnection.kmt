package intermediateWorkflow;

require "platform:/lookup/aoUrnToRam/src/iwToJavaInstantiator/_Ref.kmt"

using kermeta::standard
using javaInstantiator

aspect class IwNodeConnection
{

//*********************************************************
//Build
//*********************************************************/
	operation jiAppendBuildStatement(workflowInstantiator:WorkflowInstantiator) is do
		workflowInstantiator.appendPublicMember(
			"Condition",
			jiConditionInstanceName,
			jiGetConditionMemberInitialization(workflowInstantiator)
		)
	end
	
	operation jiGetConditionMemberInitialization(workflowInstantiator:WorkflowInstantiator):String is do
		var conditionFullyQualifiedName:String 
		init workflowInstantiator.customizableClassSubPackage+"."+step.name+"."+conditionNameWithSourcePrefix
		
		result:="createCondition(\""+conditionFullyQualifiedName+"\")"
	end
	
	
//*********************************************************
//Link
//*********************************************************/
	operation jiAppendAddNextNodeStatements(workflowInstantiator:WorkflowInstantiator) is do
		if(hasCondition) then
			jiAppendAddNextNodeStatementWithCondition(workflowInstantiator)
		else
			jiAppendAddNextNodeStatementWithoutCondition(workflowInstantiator)
		end
	end

//*********************************************************
//LinkWithCondition
//*********************************************************/
	operation jiAppendAddNextNodeStatementWithCondition(workflowInstantiator:WorkflowInstantiator) is do
		if(hasStubEntryIndex) then
			jiAppendAddNextNodeStatement_OrForkToStub(workflowInstantiator)
		else
			jiAppendAddNextNodeStatement_OrForkToNode(workflowInstantiator)
		end
	end
	
	operation jiAppendAddNextNodeStatement_OrForkToNode(workflowInstantiator:WorkflowInstantiator) is do
		workflowInstantiator.appendMethodInvocationOn_3Params(
			source.jiMemberName,
			jiAddNextNodeMethodName,
			quote(conditionName),
			target.jiMemberName,
			jiConditionInstanceName
		)
	end
	
	operation jiAppendAddNextNodeStatement_OrForkToStub(workflowInstantiator:WorkflowInstantiator) is do
		workflowInstantiator.appendMethodInvocationOn_4Params(
			source.jiMemberName,
			jiAddNextNodeMethodName,
			quote(conditionName),
			target.jiMemberName,
			quote(stubEntryIndex),
			jiConditionInstanceName
		)
	end

//*********************************************************
//LinkWithoutCondition
//*********************************************************/
	operation jiAppendAddNextNodeStatementWithoutCondition(workflowInstantiator:WorkflowInstantiator) is do
		if(hasStubExitIndex and hasStubEntryIndex) then
			jiAppendAddNextNodeStatement_StubToStub(workflowInstantiator)
		else
			if(hasStubEntryIndex) then
				jiAppendAddNextNodeStatement_NodeToStub(workflowInstantiator)
			else
				if(hasStubExitIndex) then
					jiAppendAddNextNodeStatement_StubToNode(workflowInstantiator)
				else
					jiAppendAddNextNodeStatement_NodeToNode(workflowInstantiator)
				end
			end
		end
	end
	
	operation jiAppendAddNextNodeStatement_NodeToNode(workflowInstantiator:WorkflowInstantiator) is do
		workflowInstantiator.appendMethodInvocationOn_1Param(
			source.jiMemberName,
			jiAddNextNodeMethodName,
			target.jiMemberName
		)
	end

	operation jiAppendAddNextNodeStatement_NodeToStub(workflowInstantiator:WorkflowInstantiator) is do
		workflowInstantiator.appendMethodInvocationOn_2Params(
			source.jiMemberName,
			jiAddNextNodeMethodName,
			target.jiMemberName,
			quote(stubEntryIndex)
		)
	end
	
	operation jiAppendAddNextNodeStatement_StubToNode(workflowInstantiator:WorkflowInstantiator) is do
		workflowInstantiator.appendMethodInvocationOn_2Params(
			source.jiMemberName,
			jiAddNextNodeMethodName,
			quote(stubExitIndex),
			target.jiMemberName
		)
	end

	operation jiAppendAddNextNodeStatement_StubToStub(workflowInstantiator:WorkflowInstantiator) is do
		workflowInstantiator.appendMethodInvocationOn_3Params(
			source.jiMemberName,
			jiAddNextNodeMethodName,
			quote(stubExitIndex),
			target.jiMemberName,
			quote(stubEntryIndex)
		)
	end

//*********************************************************
//Misc
//*********************************************************/
	operation jiAddNextNodeMethodName():String is do
		result:="addNextNode"
	end
	
	operation quote(toQuote:Object):String is do
		result:="\""+toQuote.toString+"\""
	end
	
	property readonly jiConditionInstanceName:String 
	getter is do
		result:="_"+conditionNameWithSourcePrefix
	end
	
}