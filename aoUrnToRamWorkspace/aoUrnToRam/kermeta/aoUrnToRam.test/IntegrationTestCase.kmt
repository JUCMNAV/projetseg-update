package aoUrnToRam::test;

require kermeta
require "platform:/lookup/aoUrnToRam/kermeta/aoUrnToRam/AoUrnToRamTransformation.kmt"
require "platform:/lookup/aoUrnToRam/kermeta/util/Uri.kmt"

using kermeta::standard
using kermeta::persistence
using kermeta::kunit
using aoUrnToRam

class AoUrnToRamTransformation_WithoutUuidReferences inherits AoUrnToRamTransformation{
	method registerRamResourceFactoryIfNotAlreadyRegistered() is do
		//ensure that the ramResourceFactory is unregistred
	    extern aoUrnToRam::javaExternalCall::RamResourceFactoryRegistrar.unregisterRamResourceFactory("ram")
	end
}

class AoUrnToRam_IntegrationTestCase inherits TestCase
{
	attribute sut:AoUrnToRamTransformation
	attribute jucmSourceFileName:String

/*
	@feature "FeaIntegrationTesting"
	operation testDemo2_Sp4_WithAutAspect() is do
		parameterizableIntegrationTest("Demo2_Sp4_WithAutAspect.jucm")
	end

	@feature "FeaIntegrationTesting"
	operation testSimple() is do
		parameterizableIntegrationTest("Simple.jucm")
	end

	@feature "FeaIntegrationTesting"
	operation testDemoSp5_WithAutSameConcern() is do
		parameterizableIntegrationTest("DemoSp5_WithAutSameConcern.jucm")
	end

	@feature "FeaIntegrationTesting"
	operation testDemoSp5_WithAutDifferentConcern() is do
		parameterizableIntegrationTest("DemoSp5_WithAutDifferentConcern.jucm")
	end

	@feature "FeaIntegrationTesting"
	operation testStartupNodeAndSharedResp() is do
		parameterizableIntegrationTest("StartupNodeAndSharedResp.jucm")
	end
	
	@feature "FeaIntegrationTesting"
	operation testBellairs() is do
		parameterizableIntegrationTest("Bellairs.jucm")
	end
*/	
	
	@feature "FeaIntegrationTesting"
	operation testOrJoin() is do
		parameterizableIntegrationTest("OrJoin.jucm")
	end
	
	operation parameterizableIntegrationTest(jucmSourceFileName:String) is do
		self.jucmSourceFileName:=jucmSourceFileName
		sut:=AoUrnToRamTransformation_WithoutUuidReferences.new
		
		sut.transform(source,destination,"true","true",aoUrnToRamPlateformUrl)

		stdio.writeln("For results, see "+destination)
	end

	property readonly source:String 
	getter is do
		result:=integrationDir.uriAppend("jucm").uriAppend(jucmSourceFileName)
	end
	
	property readonly destination:String 
	getter is do
		var destinationDirName:String init jucmSourceFileName.substring(0,jucmSourceFileName.size-5) 
		result:=integrationDir.uriAppend("actual").uriAppend(destinationDirName)
	end
	
	property readonly integrationDir:String
	getter is do
		result:=aoUrnToRamPlateformUrl.uriAppend("kermeta/aoUrnToRam.test").uriResolvePlateformUrl
	end
	
	property readonly aoUrnToRamPlateformUrl:String
	getter is do
		result:="platform:/resource/aoUrnToRam"
	end
}