package intermediateWorkflow;

require "platform:/lookup/aoUrnToRam/src/iwToIw/InsertInputProcessingNodes/_Ref.kmt"

using kermeta::standard
using kermeta::utils
using kermeta::language::structure
using kermeta::exceptions

aspect class IwNodeConnection{
	operation insertInputProcessingNode(input:IwInput) is do
		if(target.inputProcessingNodeAction=="continue") then
			//action==continue implies that there is a single succ
			//stle:Single again
			target.succs.one.insertInputProcessingNode(input)
		else
			if(target.inputProcessingNodeAction=="insert") then
				buildInputProcessingNode(input)
				linkInputProcessingNodePred(input)
				linkInputProcessingNodeSucc(input)
				self.delete
			end
		end
	end
	
	operation buildInputProcessingNode(input:IwInput) is do
		input.iwInputProcessingNode:=IwCustomizableNode.new
		input.iwInputProcessingNode.name:="Process"+input.name
		input.iwInputProcessingNode.workflow:=input.workflow
	end
	
	operation linkInputProcessingNodePred(input:IwInput) is do
		var pred:IwNodeConnection init IwNodeConnection.new
		pred.source:=source
		pred.target:=input.iwInputProcessingNode
		pred.outBinding:=outBinding
		pred.stubExitIndex:=stubExitIndex
	end
	
	operation linkInputProcessingNodeSucc(input:IwInput) is do
		var succ:IwNodeConnection init IwNodeConnection.new
		succ.source:=input.iwInputProcessingNode
		succ.target:=target
		succ.inBinding:=inBinding
		succ.stubEntryIndex:=stubEntryIndex
	end
}



