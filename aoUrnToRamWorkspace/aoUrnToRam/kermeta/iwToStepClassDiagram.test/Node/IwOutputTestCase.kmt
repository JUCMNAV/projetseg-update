package aoUrnToRam::test;

require kermeta
require "platform:/lookup/aoUrnToRam/kermeta/iwToStepClassDiagram.test/TestHelper.kmt"

using kermeta::standard
using kermeta::kunit
using intermediateWorkflow
using ram

class IwToStepClassDiagram_IwOutputTestCase inherits TestCase,IwToStepClassDiagram_TestHelper
{
	reference sut:IwOutput
	
	method setUp() is do
		sut:=createIwOutput 
	end
	
	@feature "FeaTransformStartPointResponsibilityEndPoint"
	operation testBuild_ShouldBuildCustomizableNodeClass() is do
		sut.build
		
		assertEquals("theOutput",sut.ramOutput.name)
	end
	
	@feature "FeaTransformStartPointResponsibilityEndPoint"
	operation testBuild_ShouldBuildOutputDataClass() is do
		sut.build
		
		assertEquals("theOutputOutput",sut.ramOutputData.name)
	end

	@feature "FeaDefaultExecuteOperationOnCustomizableNode"
	operation testBuild_ShouldBuildCustomizableNodeExecuteOperation() is do
		sut.build
		
		assertShouldBuildCustomizableNodeExecuteOperation(executeOperation)
	end

	@feature "FeaTransformStartPointResponsibilityEndPoint"
	operation testLink_ShouldLinkOutputAndOutputDataToClassDiagram() is do
		var step:IwStep init setupAndExeLinkOnNode(sut)
		
		assertCollectionHasTwoElements(
			sut.ramOutput,
			sut.ramOutputData,
			step.ramStructuralView.classes
		)
	end
	
	@feature "FeaTransformStartPointResponsibilityEndPoint"
	operation testLink_ShouldLinkOuputDataClassToCustomizableOutputDataMapping() is do
		var step:IwStep init setupAndExeLinkOnNode(sut)

		assertCollectionHasSingleElement(sut.ramOutputData,step.ramCustomizableOutputDataMapping.maps)
	end

	@feature "FeaDefaultExecuteOperationOnCustomizableNode"
	operation testLink_ShouldLinkExecuteOperation() is do
		var step:IwStep init setupAndExeLinkOnNode(sut)
		
		assertShouldLinkExecuteOperation(step,executeOperation)
	end
	
	property executeOperation:Operation
	getter is do
		result:=colExtSelectSingle(sut.ramOutput.operations,function {op:Operation|op.name=="execute"})
	end
}