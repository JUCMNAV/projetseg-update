package aoUrnToRam::test;

require kermeta
require "platform:/lookup/aoUrnToRam/kermeta/iwToStepClassDiagram.test/TestHelper.kmt"

using kermeta::standard
using kermeta::kunit
using intermediateWorkflow
using ram
using aoUrnToRam::util

class IwToStepClassDiagram_IwStepTestCase inherits TestCase,IwToStepClassDiagram_TestHelper
{
	reference sut:IwStep
	
	method setUp() is do
		sut:=createIwStep 
	end

	@feature "FeaTransformStartPointResponsibilityEndPoint"
	operation testBuild_ShouldBuildAspect() is do
		sut.build
		
		assertNotVoid(sut.ramAspect)
		assertEquals(sut.name,sut.ramAspect.name)
		assertNotVoid(sut.ramAspect.structuralView)
	end

	
	@feature "FeaTransformStartPointResponsibilityEndPoint"
	operation testBuild_ShouldBuildInstantiations() is do
		sut.build
		
		assertNotVoid(sut.ramWorkflowInstantiation)
		assertNotVoid(sut.ramReactiveSystemWorkflowInstantiation)
	end

	@feature "FeaTransformStartPointResponsibilityEndPoint"
	operation testLink_ShouldLinkInstantiationsToAspect() is do
		sut.build

		sut.link(createRamWorkspace)
				
		assertCollectionHasTwoElements(
			sut.ramReactiveSystemWorkflowInstantiation,
			sut.ramWorkflowInstantiation,
			sut.ramAspect.instantiations
		)
	end
	
	@feature "FeaTransformStartPointResponsibilityEndPoint"
	operation testLink_EmptyRamAspect_ShouldNotBeAddedToRamWorkspace() is do
		var ramWorkspace:RamWorkspace init createRamWorkspace
		sut.build
		
		sut.link(ramWorkspace)
		
		assertEquals(0,ramWorkspace.aspectPerWorkspacePath.size)
	end
	
	@feature "FeaTransformStartPointResponsibilityEndPoint"
	operation testLink_NotEmptyRamAspect_ShouldBeAddedToRamWorkspace() is do
		var ramWorkspace:RamWorkspace init createRamWorkspace
		createIwInput.withStep(sut.withConcern(createIwConcern))
		sut.concern.build
		
		sut.link(ramWorkspace)
		
		assertEquals(1,ramWorkspace.aspectPerWorkspacePath.size)
	end

	@feature "FeaNamingofRAMConcern"
	operation testLink_NotEmptyRamAspect_ShouldCombineConcernNameAndStepNameAsWorkspacePath() is do
		var ramWorkspace:RamWorkspace init createRamWorkspace
		createIwInput.withStep(sut.withConcern(createIwConcern))
		sut.concern.build
		
		sut.link(ramWorkspace)
				
		assertCollectionContainsElement("Steps/theConcern/theStep",ramWorkspace.aspectPerWorkspacePath.keys)
	end

	@feature "FeaTransformStartPointResponsibilityEndPoint"
	operation testLink_ShouldInvokeLinkOnNodes() is do
		var ramWorkspace:RamWorkspace init createRamWorkspace
		sut.withConcern(createIwConcern)
		createIwInput.withStep(sut)
		createIwInput.withStep(sut)
		sut.concern.build
		
		sut.link(ramWorkspace)
	
		assertEquals(2,sut.ramAspect.structuralView.classes.size)
	end
}