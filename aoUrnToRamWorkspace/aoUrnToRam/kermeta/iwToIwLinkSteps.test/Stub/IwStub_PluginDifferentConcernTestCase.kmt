package aoUrnToRam::test;

require kermeta
require "platform:/lookup/aoUrnToRam/kermeta/iwToIwLinkSteps.test/TestHelper.kmt"

using kermeta::standard
using kermeta::kunit
using intermediateWorkflow

class IwToIwLinkSteps_IwStub_PluginDifferentConcernTestCase inherits TestCase,IwToIwLinkSteps_TestHelper
{
	reference concern:IwConcern
	reference currentStep:IwStep
	reference workflow:IwWorkflow
	reference sut:IwStub
	reference stubExitNode1:IwNode
	reference stubExitNode2:IwNode
	
	reference pluginConcern:IwConcern
	reference pluginWorkflow:IwWorkflow
	reference pluginStartPoint:IwStartPoint
	
	method setUp() is do
		concern:=createIwConcern
		currentStep:=createIwStep.withConcern(concern)
		workflow:=createIwWorkflow.withConcern(concern)
		sut:=createIwStaticStub.withWorkflow(workflow)
		stubExitNode1:=createIwCustomizableNode.withWorkflow(workflow)
		linkNodes(sut,stubExitNode1)
		stubExitNode2:=createIwCustomizableNode.withWorkflow(workflow)
		linkNodes(sut,stubExitNode2)

		pluginConcern:=createIwConcern
		pluginWorkflow:=createIwWorkflow.withConcern(pluginConcern)
		pluginStartPoint:=createIwStartPoint.withWorkflow(pluginWorkflow)		
		bindStaticStubToPluginStartPoint(sut,pluginStartPoint)
	end
	
	@feature "FeaNamingOfRAMStep"
	operation testDeepFirstSearch_Unexplored_ShouldContinueExplorationOnStubExitNodes() is do
		sut.step_DeepFirstSearch(currentStep)
		
		assertVoid(pluginStartPoint.step)
		assertEquals(currentStep,stubExitNode1.step)
		assertEquals(currentStep,stubExitNode2.step)
	end
}