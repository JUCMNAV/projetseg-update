package aoUrnToRam::test;

require kermeta
require "platform:/lookup/aoUrnToRam/kermeta/iwToIwLinkSteps.test/TestHelper.kmt"

using kermeta::standard
using kermeta::kunit
using intermediateWorkflow

class IwToIwLinkSteps_IwNode_CustomizableNodeAsSutTestCase inherits TestCase,IwToIwLinkSteps_TestHelper
{
	reference concern:IwConcern
	reference workflow:IwWorkflow
	reference currentStep:IwStep
	reference sut:IwNode
	
	method setUp() is do
		concern:= createIwConcern
    	workflow:=createIwWorkflow_Concern(concern)
    	currentStep:=createIwStep_Concern(concern)
	   	sut:=createIwCustomizableNode_Workflow(workflow)
	end
	
	@feature "FeaNamingOfRAMStep"
	operation testDeepFirstSearch_Unexplored_ShouldLinkCurrentStep() is do
		sut.step_DeepFirstSearch(currentStep)
		
		assertEquals(currentStep,sut.step)
		assertCollectionHasSingleElement(currentStep,concern.steps)
	end
	
	@feature "FeaNamingOfRAMStep"
	operation testDeepFirstSearch_ExploredSameStep_ShouldNotMergeCurrentStep() is do
		sut.step:=currentStep
		
		sut.step_DeepFirstSearch(currentStep)
		
		//Assuming all steps used in this test case are reactive steps
		assertStringDoesNotContains("_",currentStep.name)
	end
	
	@feature "FeaNamingOfRAMStep"
	operation testDeepFirstSearch_ExploredDifferentStep_ShouldMergeDifferentStep() is do
	    var differentStep:IwStep init createIwStep_Concern(concern)
		sut.step:=differentStep
		
		sut.step_DeepFirstSearch(currentStep)
		
		//Assuming all steps used in this test case are reactive steps
		assertStringContains("_",currentStep.name)
	end
}