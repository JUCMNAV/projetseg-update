package oneurn::ucm::map;
require "platform:/lookup/aoUrnToRam/kermeta/aoUrnToIw/_Ref.kmt"

using kermeta::standard
using intermediateWorkflow

aspect class NodeConnection{
	reference iwNodeConnection: IwNodeConnection
	
	operation build() is do
		iwNodeConnection:=IwNodeConnection.new
		iwNodeConnection.conditionName:=conditionLabel
	end
	
	operation link() is do
		iwNodeConnection.source:=source.asType(PathNode).iwGetExitNode(self)
		iwNodeConnection.target:=iwSingleTarget
		iwNodeConnection.trigger:=iwIsTrigger
	end

	property readonly iwSingleTarget : IwNode
	getter is do
		if(targetAsPathNode.iwHasNodes) then
			result:=target.asType(PathNode).iwGetEntryNode(self)
		else
			result:=iwNextNodeConnection.iwSingleTarget
		end
	end
	
	operation initStubEntryIndex(stubEntryIndex:Integer) is do
		iwDisjunctivePredNodeConnections.each{iwNodeConnection|
			iwNodeConnection.stubEntryIndex:=stubEntryIndex	
		}
	end

	//Only the orJoin is not converted to the intermediate workflow model.
	//Thus, if a NodeConnection has more than one iwNodeConnection in pred, 
	//it implies there is a disjunction (orJoin) between these iwNodeConnection 	
	property readonly iwDisjunctivePredNodeConnections : IwNodeConnection[1..*]
	getter is do
		result:=OrderedSet<IwNodeConnection>.new
		iwDisjunctivePredNodeConnections_Recurse(result)
	end

	operation iwDisjunctivePredNodeConnections_Recurse(disjunctivePredNodeConnections:IwNodeConnection[1..*]) is do
		if(iwNodeConnection.isVoid==false) then
			disjunctivePredNodeConnections.add(iwNodeConnection)
		else
		    //source has no iwNodeConnection implies a at least one IwNodeConnection exists before
			sourceAsPathNode.predAsNodeConnection.each{nodeConnection|
				nodeConnection.iwDisjunctivePredNodeConnections_Recurse(disjunctivePredNodeConnections)
			}
		end
	end
	
	property readonly iwIsTrigger: Boolean
	getter is do
		if(target.isInstanceOf(Connect)) then
			result:=true
		else
			if(targetAsPathNode.iwHasNodes) then
				result:=void //Trigger is an optional flag
			else
				result:=iwNextNodeConnection.iwIsTrigger
			end
		end
	end
	
	property readonly iwNextNodeConnection: NodeConnection
	getter is do
		//Pre-Condition: targetAsPathNode.iwHasNodes==false
	    //target has no iwNodes implies target has always has a single succ

		//stle: single again
		result:=targetAsPathNode.succAsNodeConnection.one
	end

//*********************************************************
//AoUrnToRam Extensions
//*********************************************************/
	property readonly conditionLabel: String
	getter is do
		if(condition.isVoid==false) then
			result:=condition.label
		else
			result:=void
		end
	end
	
	property readonly targetAsPathNode: PathNode
	getter is do
		result:=target.asType(PathNode)
	end

	property readonly sourceAsPathNode: PathNode
	getter is do
		result:=source.asType(PathNode)
	end
	
	property readonly ucmMap: UCMmap
	getter is do
		result:=sourceAsPathNode.ucmMap
	end
}