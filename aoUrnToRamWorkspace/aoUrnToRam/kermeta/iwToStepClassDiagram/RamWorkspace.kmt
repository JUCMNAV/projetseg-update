package intermediateWorkflow;

require "platform:/lookup/aoUrnToRam/kermeta/iwToStepClassDiagram/_Ref.kmt"

require kermeta

using kermeta::standard
using kermeta::utils
using ram

class RamWorkspace inherits CollectionExt{
	reference aspectPerWorkspacePath:Hashtable<String,Aspect>
	reference workflow:Aspect
	reference customizableNode:Class
	reference executeOperation:Operation
	reference customizableInputData:Class
	reference customizableOutputData:Class
	reference inputAspect:Aspect
	reference outputAspect:Aspect
	
	operation initialize(
		workflow:Aspect,
		inputAspect:Aspect,
		outputAspect:Aspect
	):RamWorkspace is do
		aspectPerWorkspacePath:=Hashtable<String,Aspect>.new
		self.workflow:=workflow
		self.customizableNode:=findClass(workflow,"CustomizableNode")
		self.executeOperation:=colExtSingle(customizableNode.operations)
		self.inputAspect:=inputAspect
		self.outputAspect:=outputAspect
		self.customizableInputData:=findClass(inputAspect,"CustomizableInputData")
		self.customizableOutputData:=findClass(outputAspect,"CustomizableOutputData")
		result:=self
	end
	
	operation findClass(theAspect:Aspect,className:String):Class is do
		result:=theAspect.structuralView.classes.select{theClass|
			theClass.name==className
		}.one.asType(Class)
	end
}