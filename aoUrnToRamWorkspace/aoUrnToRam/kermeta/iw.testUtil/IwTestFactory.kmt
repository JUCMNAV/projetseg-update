package aoUrnToRam::test;

require kermeta
require "platform:/lookup/aoUrnToRam/kermeta/iw.testUtil/_Ref.kmt"

using intermediateWorkflow

class IwTestFactory
{
	operation createIwModel():IwModel is do
		result:=IwModel.new
		result.name:="theModel"
	end

	operation createIwConcern():IwConcern is do
		result:=IwConcern.new
		result.name:="theConcern"
	end

	operation createIwStep():IwStep is do
		result:=IwStep.new
		result.name:="theStep"
	end

	operation createIwWorkflow():IwWorkflow is do
		result:=IwWorkflow.new
		result.name:="theWorkflow"
	end
	
	operation createIwPlugin():IwWorkflow is do
		result:=createIwWorkflow.withName("thePlugin")
	end
	
	operation createIwNodeConnection():IwNodeConnection is do
		result:=IwNodeConnection.new
	end
/*********************************************************
Node
*********************************************************/
	operation createIwInput():IwInput is do
		result:=IwInput.new
		result.name:="theInput"
	end

	operation createIwCustomizableNode():IwCustomizableNode is do
		result:=IwCustomizableNode.new
		result.name:="theCustomizableNode"
	end
	
	operation createIwOutput():IwOutput is do
		result:=IwOutput.new
		result.name:="theOutput"
	end

	operation createIwStartPoint():IwStartPoint is do
		result:=IwStartPoint.new
		result.name:="theStartPoint"
		result.startPointType:="global"
	end
	
	operation createIwEndPoint():IwEndPoint is do
		result:=IwEndPoint.new
		result.name:="theEndPoint"
	end

	operation createIwOrFork():IwOrFork is do
		result:=IwOrFork.new
		result.name:="theOrFork"
	end

	operation createIwAndFork():IwAndFork is do
		result:=IwAndFork.new
		result.name:="theAndFork"
	end
	
	operation createIwAndJoin():IwAndJoin is do
		result:=IwAndJoin.new
		result.name:="theAndJoin"
	end
/*********************************************************
Stub
*********************************************************/
	
	operation createIwStub():IwStub is do
		result:=IwStub.new
		result.name:="theStub"
	end

	operation createIwStaticStub():IwStub is do
		result:=createIwStub
		createIwPluginBinding.withStub(result)
	end
	
	operation createIwAspectMarker():IwStub is do
		result:=createIwStaticStub
		result.stubType:="aspectMarker"
	end
	
	operation createIwPluginBinding():IwPluginBinding is do
		result:=IwPluginBinding.new
	end
	
	operation createIwInBinding(stubEntry:IwNodeConnection,pluginStartPoint:IwStartPoint):IwInBinding is do
		pluginStartPoint.startPointType:="bound"
		result:=IwInBinding.new
		result.stubEntry:=stubEntry
		result.pluginStartPoint:=pluginStartPoint
	end
	
	operation createIwOutBinding(stubExit:IwNodeConnection,pluginEndPoint:IwEndPoint):IwOutBinding is do
		result:=IwOutBinding.new
		result.stubExit:=stubExit
		result.pluginEndPoint:=pluginEndPoint
	end
	
	operation setupStartPointWithDefaultTarget(workflow:IwWorkflow):IwStartPoint is do
		result:=createIwStartPoint.withWorkflow(workflow)
		result.connect(createIwInput.withWorkflow(workflow)) 
	end
	
}
