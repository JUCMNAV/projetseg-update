package aoUrnToRam::test;

require kermeta
require "platform:/lookup/aoUrnToRam/kermeta/iw.testUtil/_Ref.kmt"

using intermediateWorkflow

class IwTestFactory
{
	operation createIwModel():IwModel is do
		result:=IwModel.new
		result.name:="theModel"
	end

	operation createIwConcern():IwConcern is do
		result:=IwConcern.new
		result.name:="theConcern"
	end

	operation createIwConcern_Model(model:IwModel):IwConcern is do
		result:=createIwConcern
		result.model:=model
	end
	
	operation createIwStep():IwStep is do
		result:=IwStep.new
		result.name:="theStep"
	end

	operation createIwStep_Concern(concern:IwConcern):IwStep is do
	   	result:=createIwStep
		result.concern:=concern
	end

	operation createIwWorkflow():IwWorkflow is do
		result:=IwWorkflow.new
		result.name:="theWorkflow"
	end
	
	operation createIwPlugin():IwWorkflow is do
		result:=createIwWorkflow.withName("thePlugin")
	end

	operation createIwWorkflow_Concern(concern:IwConcern):IwWorkflow is do
	   	result:=createIwWorkflow
		result.concern:=concern
	end
	
	operation createIwWorkflowWithContainers():IwWorkflow is do
		var model:IwModel init createIwModel
		var concern:IwConcern init createIwConcern_Model(model)
		result:=createIwWorkflow_Concern(concern)
	end
	
	operation createIwNodeConnection():IwNodeConnection is do
		result:=IwNodeConnection.new
	end
	
	operation linkNodes(source:IwNode,target:IwNode):IwNodeConnection is do
		result:=connectSource(source)
		result.target:=target
	end
	
	operation connectSource(source:IwNode):IwNodeConnection is do
		result:=createIwNodeConnection
		result.source:=source
	end
	
	operation withCondition(nodeConnection:IwNodeConnection):IwNodeConnection is do
		nodeConnection.conditionName:="theCondition"
		result:=nodeConnection
	end

/*********************************************************
Node
*********************************************************/
	operation createIwInput():IwInput is do
		result:=IwInput.new
		result.name:="theInput"
	end

	operation createIwInput_Workflow(workflow:IwWorkflow):IwInput is do
		result:=createIwInput
		result.workflow:=workflow
	end
	
	operation createIwCustomizableNode():IwCustomizableNode is do
		result:=IwCustomizableNode.new
		result.name:="theCustomizableNode"
	end
	
	operation setAsFirstRefToShared(customizableNode:IwCustomizableNode) is do
		customizableNode.name:="shared"
		customizableNode.customizableNodeRefId:="1"
	end 

	operation setAsSecondRefToShared(customizableNode:IwCustomizableNode) is do
		customizableNode.name:="shared"
		customizableNode.customizableNodeRefId:="2"
	end 
	
	operation createIwCustomizableNode_Workflow(workflow:IwWorkflow):IwCustomizableNode is do
		result:=createIwCustomizableNode
		result.workflow:=workflow
	end
	
	operation createIwOutput():IwOutput is do
		result:=IwOutput.new
		result.name:="theOutput"
	end

	operation createIwOutput_Workflow(workflow:IwWorkflow):IwOutput is do
		result:=createIwOutput
		result.workflow:=workflow
	end

	operation createIwStartPoint():IwStartPoint is do
		result:=IwStartPoint.new
		result.name:="theStartPoint"
		result.startPointType:="global"
	end
	
	operation setupStartPointWithDefaultTarget(workflow:IwWorkflow):IwStartPoint is do
		result:=createIwStartPoint.withWorkflow(workflow)
		result.connect(createIwInput.withWorkflow(workflow)) 
	end
	

	operation createIwStartPoint_Workflow(workflow:IwWorkflow):IwStartPoint is do
		result:=createIwStartPoint
		result.workflow:=workflow
	end
	
	operation createIwEndPoint():IwEndPoint is do
		result:=IwEndPoint.new
		result.name:="theEndPoint"
	end

	operation createIwEndPoint_Workflow(workflow:IwWorkflow):IwEndPoint is do
		result:=createIwEndPoint
		result.workflow:=workflow
	end
	
	operation createIwOrFork():IwOrFork is do
		result:=IwOrFork.new
		result.name:="theOrFork"
	end

	operation createIwOrFork_Workflow(workflow:IwWorkflow):IwOrFork is do
		result:=createIwOrFork
		result.workflow:=workflow
	end
	
	operation createIwAndFork():IwAndFork is do
		result:=IwAndFork.new
		result.name:="theAndFork"
	end
/*********************************************************
Stub
*********************************************************/
	
	operation createIwStub():IwStub is do
		result:=IwStub.new
		result.name:="theStub"
	end

	operation createIwStub_Workflow(workflow:IwWorkflow):IwStub is do
		result:=createIwStub
		result.workflow:=workflow
	end
	
	//stle:toRefactor
	operation createIwStaticStub_Workflow(workflow:IwWorkflow):IwStub is do
		result:=createIwStub_Workflow(workflow)
		var pluginBinding:IwPluginBinding init createIwPluginBinding
		pluginBinding.stub:=result
	end
	
	operation createIwStaticStub():IwStub is do
		result:=createIwStub
		var pluginBinding:IwPluginBinding init createIwPluginBinding
		pluginBinding.stub:=result
	end
	
	
	operation createIwPluginBinding():IwPluginBinding is do
		result:=IwPluginBinding.new
	end
	
	operation createIwInBinding(stubEntry:IwNodeConnection,pluginStartPoint:IwStartPoint):IwInBinding is do
		pluginStartPoint.startPointType:="bound"
		result:=IwInBinding.new
		result.stubEntry:=stubEntry
		result.pluginStartPoint:=pluginStartPoint
	end
	
	operation bindStaticStubToPluginStartPoint(staticStub:IwStub,pluginStartPoint:IwStartPoint):IwInBinding is do
		result:=createIwInBinding(void,pluginStartPoint)
		//stle:single again
		result.pluginBinding:=staticStub.pluginBindings.one
	end
	
	operation bindAspectMarkerToPluginStartPoint(staticStub:IwStub,pluginStartPoint:IwStartPoint):IwInBinding is do
		result:=bindStaticStubToPluginStartPoint(staticStub,pluginStartPoint)
		result.pluginBinding.stub.stubType:="aspectMarker"
	end
	
	//stle:refactor to with
	operation bindStaticStubToPluginStartPoint_withStubEntry(staticStub:IwStub,stubEntry:IwNodeConnection,pluginStartPoint:IwStartPoint):IwInBinding is do
		result:=createIwInBinding(stubEntry,pluginStartPoint)
		//stle:single again
		result.pluginBinding:=staticStub.pluginBindings.one
	end
	
	
	operation createIwOutBinding(stubExit:IwNodeConnection,pluginEndPoint:IwEndPoint):IwOutBinding is do
		result:=IwOutBinding.new
		result.stubExit:=stubExit
		result.pluginEndPoint:=pluginEndPoint
	end
	
	operation bindStaticStubToPluginEndPoint(staticStub:IwStub,stubExitNode:IwNode,pluginEndPoint:IwEndPoint):IwOutBinding is do
		var stubExit:IwNodeConnection init linkNodes(staticStub,stubExitNode)
		result:=createIwOutBinding(stubExit,pluginEndPoint)
		//stle:single again
		result.pluginBinding:=staticStub.pluginBindings.one
	end
}
