package aoUrnToRam::test;

require "platform:/resource/aoUrnToRam/test/tdd/iwToJavaInstantiator/TestHelper.kmt"

using kermeta::standard
using kermeta::kunit
using intermediateWorkflow
using javaInstantiator

class IwToJavaInstantiator_IwStartPointTestCase inherits TestCase,IwToJavaInstantiator_TestHelper
{
	reference sut:IwStartPoint
	reference workflowInstantiator:WorkflowInstantiator

	method setUp() is do
		sut:=createIwStartPoint
		workflowInstantiator:=createWorkflowInstantiator
	end

	@feature "FeaWorkflowInstantiationWithoutStubs"
	operation testAppendBuildStatement_ShouldNotDeclareAndInitializeWorkflowNode() is do
		sut.jiAppendBuildStatement(workflowInstantiator)
		
		assertEquals("",workflowInstantiator.content)
	end

	@feature "FeaWorkflowInstantiationWithoutStubs"
	operation testAppendLinkStatement_ShouldNotInvokeAppendLinkStatementOnNodeConnections() is do
		linkNodes(sut,createIwCustomizableNode)
		linkNodes(sut,createIwCustomizableNode)
		
		sut.jiAppendLinkNodesToNextNodesStatement(workflowInstantiator)
		
		assertEquals("",workflowInstantiator.content)
	end
	
	operation testAppendLinkNodesToWorkflowStatement_ShouldNotLinkStartPointToWorkflow() is do
		sut.jiAppendLinkNodesToWorkflowStatement(workflowInstantiator)
		
		assertEquals("",workflowInstantiator.content)
	end
	
	operation testAppendLinkStartNodesToWorkflowStatement_NotBound_ShouldLinkStartNodesToWorkflow() is do
		sut.withStartPointType("global").connect(createIwInput)
	
		sut.jiAppendLinkStartNodesToWorkflowStatement(workflowInstantiator)
		
		assertEquals("        workflow.addStartupNode(_theInput);\n",workflowInstantiator.content)
	end
	
	operation testAppendLinkStartNodesToWorkflowStatement_Bound_ShouldNotLinkStartNodesToWorkflow() is do
		sut.withStartPointType("bound").connect(createIwInput)
	
		sut.jiAppendLinkStartNodesToWorkflowStatement(workflowInstantiator)
		
		assertEquals("",workflowInstantiator.content)
	end
}
