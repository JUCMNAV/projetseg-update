package aoUrnToRam::test;
require "platform:/resource/aoUrnToRam/test/tdd/aoUrnToIw/TestHelper.kmt"

using kermeta::standard
using kermeta::kunit
using oneurn::urncore
using oneurn::ucm::map
using oneurn::urn
using intermediateWorkflow

class AoUrnToIw_UCMmapTestCase inherits TestCase,AoUrnToIw_TestHelper {
	reference sut:UCMmap
	
	@feature "FeaTransformStartPointResponsibilityEndPoint"
	operation testBuild_ShouldInvokeNameOrPrefixIdToSetName() is do
		sut:=createUcmMap
		sut.id:=void
	
		sut.build
	
		assertNotVoid(sut.iwWorkflow)
		assertNameOrPrefixInvokedToSetName(sut,sut.iwWorkflow.name)
	end

	@feature "FeaNamingofRAMConcern"
	operation testLink_WithoutConcern_ShouldLinkIwWorkflowToIwConcern() is do
		var urnSpec:URNspec init createUrnSpec
		sut:=createUcmMap_UrnSpec(urnSpec)
		urnSpec.build
		
		sut.link
	
		assertCollectionHasSingleElement(sut.iwWorkflow,sut.urnSpec.iwWithoutConcern.workflows)
	end
	
	@feature "FeaNamingofRAMConcern"
	operation testLink_WithConcern_ShouldLinkIwWorkflowToIwConcern() is do
		var urnSpec:URNspec init createUrnSpec
		var concern:Concern init createConcern_UrnSpec(urnSpec)
		sut:=createUcmMap_UrnSpec(urnSpec)
		sut.concern:=concern
		urnSpec.build
		
		sut.link
	
		assertCollectionHasSingleElement(sut.iwWorkflow,concern.iwConcern.workflows)
	end
	
	@feature "FeaTransformStartPointResponsibilityEndPoint"
	operation testLink_ShouldInvokeLinkOnPathNodes() is do
		var urnSpec:URNspec init createUrnSpec
		sut:=createUcmMap_UrnSpec(urnSpec)
		createStartPoint_UcmMap(sut)
		createStartPoint_UcmMap(sut)
		urnSpec.build
		
		sut.link
	
		assertEquals(2,sut.iwWorkflow.nodes.size)
	end
	
	
}