package aoUrnToRam::test;

require kermeta
require "platform:/resource/aoUrnToRam/test/tdd/aoUrnToIw/AoUrnTestFactory.kmt"
require "platform:/resource/aoUrnToRam/test/CustomAssert.kmt"
require "platform:/resource/aoUrnToRam/src/Util.kmt"

using kermeta::standard
using kermeta::language::structure
using oneurn::ucm::map
using oneurn::urncore
using intermediateWorkflow

class AoUrnToIw_TestHelper inherits CustomAssert,AoUrnTestFactory
{
	operation getSingleEntryNode(pathNode:PathNode):IwNode is do
		result:=pathNode.iwGetEntryNode(void)
	end
	
	operation getSingleExitNode(pathNode:PathNode):IwNode is do
		result:=pathNode.iwGetExitNode(void)
	end
	
	operation pathNode_ParameterizableTestBuild_ShouldBuildEquivalentNodeAfterInput(pathNode:PathNode) is do
		pathNode.name:=void
		attachInputRamMetadata(pathNode)
		
		pathNode.build
		
		assertEquals(pathNode.iwInput,getSingleEntryNode(pathNode))
		assertEquals(pathNode.iwEquivalentNode,getSingleExitNode(pathNode))
		assertNameOrPrefixInvokedToSetName(pathNode,pathNode.iwEquivalentNode.name)
	end

	operation pathNode_ParameterizableTestBuild_ShouldBuildEquivalentNodeBeforeInput(pathNode:PathNode) is do
		pathNode.name:=void
		attachInputRamMetadata(pathNode)
		
		pathNode.build
		
		assertEquals(pathNode.iwEquivalentNode,getSingleEntryNode(pathNode))
		assertNameOrPrefixInvokedToSetName(pathNode,pathNode.iwEquivalentNode.name)
	end
	
	operation assertNameOrPrefixInvokedToSetName(urnModelElement:URNmodelElement,name:String) is do
		assertStringContains(urnModelElement.id,name)
	end
	
	operation bindAsPluginInStub(startPoint:StartPoint):Stub is do
		result:=createStub
		result.diagram:=createUcmMap //Required to compare concerns
		var pluginBinding:PluginBinding init createPluginBinding_Stub(result)
		createInBinding_PluginBinding(pluginBinding).startPoint:=startPoint
	end
	
	operation bindAsPluginInPointcutStub(startPoint:StartPoint):Stub is do
		result:=bindAsPluginInStub(startPoint)
		result.aopointcut:=PointcutKind.Regular
	end
	
	operation outbindAsPluginInPointcutStub(endPoint:EndPoint):Stub is do
		result:=createStub
		result.diagram:=createUcmMap //Required to compare concerns
		var pluginBinding:PluginBinding init createPluginBinding_Stub(result)
		createOutBinding_PluginBinding(pluginBinding).endPoint:=endPoint
		result.aopointcut:=PointcutKind.Regular
	end
	
}